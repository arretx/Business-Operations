// The name of the Gmail Label that is to be purged?
var GMAIL_SUBJECT = "flexmls Web, New Registration";

// Purge messages automatically after how many days?

var PURGE_AFTER = "0";

// Function

function Intialize() {
  return;
}

// Installs time triggers.

function Install() {

  ScriptApp.newTrigger("purgeGmailsubject")
           .timeBased()
           .at(new Date((new Date()).getTime() + 1000*60*2))
           .create();

  ScriptApp.newTrigger("purgeGmailsubject")
           .timeBased().everyDays(1).create();

}

function Uninstall() {

  var triggers = ScriptApp.getScriptTriggers();
  for (var i=0; i<triggers.length; i++) {
    ScriptApp.deleteTrigger(triggers[i]);
  }

}

function purgeGmailsubject() {

  var age = new Date();
  age.setDate(age.getDate() - PURGE_AFTER);

  var purge  = Utilities.formatDate(age, Session.getScriptTimeZone(), "yyyy-MM-dd");
  var search = "subject:" + GMAIL_SUBJECT + " before:" + purge;

  try {

    var threads = GmailApp.search(search, 0, 100);

    if (threads.length == 100) {
      ScriptApp.newTrigger("purgeGmailsubject")
               .timeBased()
               .at(new Date((new Date()).getTime() + 1000*60*10))
               .create();
    }

    for (var i=0; i<threads.length; i++) {
      var messages = GmailApp.getMessagesForThread(threads[i]);
      for (var j=0; j<messages.length; j++) {
        var email = messages[j];
        if (email.getDate() < age) {
          email.moveToTrash();
        }
      }
    }

  } catch (e) {}

}
